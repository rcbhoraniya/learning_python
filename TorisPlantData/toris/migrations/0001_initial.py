# Generated by Django 3.2.5 on 2021-08-01 08:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_code', models.IntegerField(primary_key=True, serialize=False)),
                ('color_marking_on_bobin', models.CharField(max_length=200)),
                ('tape_color', models.CharField(max_length=100)),
                ('req_denier', models.CharField(max_length=10)),
                ('req_gramage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('req_tape_width', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cutter_spacing', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock_of_bobin', models.DecimalField(decimal_places=2, max_digits=10)),
                ('req_streanth_per_tape_in_kg', models.DecimalField(decimal_places=2, max_digits=10)),
                ('req_elongation_percent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('streanth', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tanacity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pp_percent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('filler_percent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shiner_percent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('color_percent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tpt_percent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('uv_percent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('color_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PlantProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date production')),
                ('shift', models.CharField(choices=[('Day', 'DAY'), ('Night', 'NIGHT')], default='DAY', max_length=20)),
                ('no_of_winderman', models.IntegerField()),
                ('end_reading', models.IntegerField()),
                ('start_reading', models.IntegerField()),
                ('wastage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('operator_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='toris.operator')),
                ('plant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='toris.plant')),
                ('product_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toris.product')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(verbose_name='date order')),
                ('customer_name', models.CharField(max_length=200)),
                ('order_qty', models.IntegerField()),
                ('product_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toris.product')),
            ],
        ),
    ]
